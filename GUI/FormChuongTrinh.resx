<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAhgAAAIYARPgy0wAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEdUlEQVR4Xu3ba6gUdRjH8ZM3tFKJLKGLYoYlvsqoBDNDBUVQBBO1oOubsFDS7JVEL0IrCioKQkgj
        RF95wSAlAm9lmVZq3pBeCBYhEdj97un7i/Nfnv3z7J7d2fkfR2Ye+MDuMzP//+yzs7Nzdp7T1d3dXWpu
        skzcZJm4yTJxk2XiJsvETQpxEwZ7yy4lxECM85aJmxRiN/7GMWzA05iBEd76RUBc27OPK/AuDuMvnPHW
        FzcpxB7ogec0nsIwb9u+RFyJJ3EK8X4GuRcg+Amv42ZvjJSIMXgF5xHvVyxTAfaaAXrzL7ZjujdWnoh7
        sRWaM96PRpIXwNqCq7wxO0EMw0bE87UiUwH2mQHadQaTvHGzIO7A14jnaVWmAnxkBshC3yDP4DJv/FZo
        W+iMrjN5PH47LkoBgh24xpujGW3Ts208XhaNC0DoQmE6XsV4s+Bj2EE6cRaj7cTNEKPwDeJxsqoVgBiH
        53A7dIR1/YiwYu1zS+w3+Tzogmp4GL8RYiiOIt6+E7YAk0z+WyXCE0lZAPkQA8McMaI/8jrsrUYF+D9h
        n9gCfGLyeVoX5ogRb5r18pSpAJ+afN5WhXnMfMvM8rwVrgCywMw1C+1c2bUrUwEOmHwKb5m5XjD5FKoC
        mLlaLsBnJp9C4Qtw0ORTqApg5ipkAQ6ZfAqFL8DnJp9CVQAzVyEL8IXJp1AVwMxVyAJ8afIpFL4Auqlg
        l+WtKoCZq5AFOGLyKRS+AHn/LBWrCmDmKmQBvjL5FKoCmLkKWQD9jG2X5a3wBThu8ilUBTBzFbIAJ0w+
        hcIX4KTJp1AVwMxVyAKoI0ONCQ9iNdT5oY9Fp/fqgxQFUE+C3ji10KzBQ7gLtZuyRNMCzAsrNkIMwN14
        G2qSstu3I68C/IJ3MBUNb7wGxFzY7eue6A+g2bgBA7wBLOIK6AjZhQuwY/Wm0wKogeMxDLX75CHUBzAC
        0xD/1Ff3xNK9unPQDyPvYy0Wwb3HT6ht7Xn8hngsT5YC/ImX4XZ+EkMwB2r22Azd4Va/kraLxwrcZDM6
        B3yAJ3CjsxNjoT6AeLtYuwXQi5lg5+rZVq00j2AbfkW8XW/cZDvUTjfF2bGH8QPi9YNWC6DP+FL0i8af
        CB2Znd5VdpNZqFGy7h0i1Lu7CfG60koBdqKut4hQE7f6Bds95zTiJrPSu7EOdR8N4j7En8NmBdA4j0dj
        6FBXW25eX8OBm+yUGq9mRy9ATRC/I6zTqAD/4P5o2yn4HmGdPNUe/Ay1xr0Bfb3oAmI8dMhdh6uhzmy1
        1V2OCdAZV60tr+E96EIpHJp6F5dHL0St7OFE5RVA7+78aBud4OzR8x103lmPVViMOxH2T19310P7rf2/
        DfdgCfRNpr4H+03VtRDqnas7yWRFjMSjCGdlXTANMst1waJixwX4A3NMrh9ego4Ite2uxC1heScIdaPd
        ikXuCnkhBkMXVg+gv8lPxovm+bOYaZ7rxesyVpL+g4ab7AtE7d9x7OO+5ibLxE2WiZssEzdZJm6yTNxk
        eXR3/QfCZ0bIJaEAJQAAAABJRU5ErkJggg==
</value>
  </data>
</root>